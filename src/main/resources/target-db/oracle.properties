#########################################
## ORACLE CONVERSION CONFIGURATION
#########################################

# Nonquoted identifiers are not case sensitive. Oracle interprets them as uppercase. 
# Quoted identifiers are case sensitive.

# Table name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.tableName  = ANACONDA_CASE 

# Column name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.columnName = ANACONDA_CASE

# Primary Key name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.pkName = ANACONDA_CASE

# Foreign Key name conversion : camelCase, PascalCase, snake_case, ANACONDA_CASE
conv.fkName = ANACONDA_CASE

#########################################
# Neutral type to SQL type
#########################################

# The VARCHAR datatype is synonymous with the VARCHAR2 datatype. 
# To avoid possible changes in behavior, always use the VARCHAR2 datatype to store variable-length character strings.
type.string = VARCHAR2(%s)

# The NUMBER datatype stores fixed and floating-point numbers. 
# In Oracle you can effectively declare an INTEGER by declaring a NUMBER with no precision
type.byte          = NUMBER
type.byte.autoincr = NUMBER

# Oracle "SMALLINT" : alias for ANSI data type ( = NUMBER(38) )
type.short          = NUMBER
type.short.autoincr = NUMBER

# Oracle "INT" : alias for ANSI data type ( = NUMBER(38) )
type.int           = NUMBER
type.int.autoincr  = NUMBER

type.long          = NUMBER
type.long.autoincr = NUMBER

type.decimal   = NUMBER(%p)
type.float     = NUMBER(%p)
type.double    = NUMBER(%p)

# No BOOLEAN in Oracle 
type.boolean   = CHAR(1)

type.date      = DATE
type.time      = DATE
type.timestamp = DATE
  
type.binary    = BLOB
  
# UUDI for the future ?
# CREATE TABLE myTable (
#   id STRING AS UUID,
#   name STRING, 
# PRIMARY KEY (id));
# type.uuid    = STRING AS UUID
