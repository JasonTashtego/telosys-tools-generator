// Generation date/time : $now.date  $now.time

//========================================================================
// Target database (env.database) : "${env.database}"
//========================================================================

#foreach ( $entity in $model.allEntities )
//--------------------------------------------------
CREATE TABLE $entity.sqlTableName
(
#foreach( $attribute in $entity.attributes )
// Attribute : $attribute.name  ( hasDatabaseName ? $attribute.hasDatabaseName() : "$attribute.databaseName" / hasDatabaseType ? $attribute.hasDatabaseType() : "$attribute.databaseType" )
#if ( ! $attribute.isTransient() )
  $attribute.sqlColumnName $attribute.sqlColumnType ${attribute.sqlColumnConstraints}#if( $foreach.hasNext() ),#end

#end## if
#end## foreach
);

// List of Primary Key columns :
#foreach( $col in $entity.sqlPrimaryKeyColumns )
//  - $col
#end
// Create Primary Key 
#if ( $entity.hasPrimaryKey() ) 
## #set( $PKCOLUMNS = $fn.join( $entity.sqlPrimaryKeyColumns, "," ) )
ALTER TABLE $entity.sqlTableName ADD CONSTRAINT 
##  pk_${entity.sqlTableName} PRIMARY KEY($PKCOLUMNS);
  pk_${entity.sqlTableName} PRIMARY KEY($entity.sqlPrimaryKeyColumnsAsString);
#end

#end ## end of foreach entity

//========================================================================
// FOREIGN KEYS with CREATE INDEX for each FOREIGN KEY
//========================================================================
#foreach( $entity in $model.allEntities  )
-- $entity.name 
#if ( $entity.hasForeignKeys() ) 
#foreach( $fk in $entity.databaseForeignKeys )
---- $fk.name
## #foreach ( $c in $fk.sqlColumns ) 
#foreach ( $c in $fk.attributes ) 
-- col :  $c
#end
## #foreach ( $c in $fk.sqlReferencedColumns ) 
## -- referenced col :  $c
## #end
## ALTER TABLE $fk.sqlTableName // tableName = "$fk.tableName"
ALTER TABLE $fk.sqlOriginTableName
  ADD CONSTRAINT $fk.sqlName // fk.name = "$fk.name"
  FOREIGN KEY ( $fk.sqlOriginColumnsAsString ) 
  REFERENCES $fk.sqlReferencedTableName ( $fk.sqlReferencedColumnsAsString ) ;

CREATE INDEX ix_${fk.sqlName} ON $fk.sqlOriginTableName ( $fk.sqlOriginColumnsAsString ) ;

#end## foreach( $fk )
#end## if has FK
#end## foreach( $entity )

